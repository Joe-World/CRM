package org.burning.crm.workbench.mapper;

import org.burning.crm.workbench.domain.ContactsRemark;
import org.burning.crm.workbench.domain.CustomerRemark;

import java.util.List;

public interface CustomerRemarkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbggenerated Sat Jul 16 11:43:13 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbggenerated Sat Jul 16 11:43:13 CST 2022
     */
    int insert(CustomerRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbggenerated Sat Jul 16 11:43:13 CST 2022
     */
    int insertSelective(CustomerRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbggenerated Sat Jul 16 11:43:13 CST 2022
     */
    CustomerRemark selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbggenerated Sat Jul 16 11:43:13 CST 2022
     */
    int updateByPrimaryKeySelective(CustomerRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbggenerated Sat Jul 16 11:43:13 CST 2022
     */
    int updateByPrimaryKey(CustomerRemark record);

    /**
     * 批量创建客户备注
     * @return
     */
    int insertCustomerRemarkByList(List<CustomerRemark> remarkList);

    /**
     * 保存创建的客户备注信息
     * @param remark
     * @return
     */
    int insertCustomerRemark(CustomerRemark remark);

    /**
     * 根据备注id删除备注
     * @param id
     * @return
     */
    int deleteCustomerRemarkById(String id);

    /**
     * 根据客户id查询其所有的备注信息
     * @param id
     * @return
     */
    List<CustomerRemark> selectCustomerRemarkForDetailByCustomerId(String id);

    /**
     * 保存修改的客户备注信息
     * @param remark
     * @return
     */
    int updateCustomerRemark(CustomerRemark remark);
}