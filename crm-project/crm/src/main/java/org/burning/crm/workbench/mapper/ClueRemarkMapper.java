package org.burning.crm.workbench.mapper;

import org.burning.crm.workbench.domain.ClueRemark;

import java.util.List;

public interface ClueRemarkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Thu Jul 14 14:03:32 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Thu Jul 14 14:03:32 CST 2022
     */
    int insert(ClueRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Thu Jul 14 14:03:32 CST 2022
     */
    int insertSelective(ClueRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Thu Jul 14 14:03:32 CST 2022
     */
    ClueRemark selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Thu Jul 14 14:03:32 CST 2022
     */
    int updateByPrimaryKeySelective(ClueRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Thu Jul 14 14:03:32 CST 2022
     */
    int updateByPrimaryKey(ClueRemark record);

    /**
     * 根据线索id查询该线索关联的所有线索备注信息（给用户看的）
     * @param id
     * @return
     */
    List<ClueRemark> selectClueRemarkForDetailByClueId(String id);

    /**
     * 根据线索id查询该线索关联的所有线索备注信息
     * @param id
     * @return
     */
    List<ClueRemark> selectClueRemarkByClueId(String id);

    /**
     * 根据线索id删除所有该线索关联的线索的备注
     * @param id
     * @return
     */
    int deleteClueRemarkByClueId(String id);

    /**
     * 保存创建的备注信息
     * @param clueRemark
     * @return
     */
    int insertClueRemark(ClueRemark clueRemark);

    /**
     * 保存修改的备注信息
     * @param clueRemark
     * @return
     */
    int updateClueRemark(ClueRemark clueRemark);

    /**
     * 根据备注id删除备注
     * @param id
     * @return
     */
    int deleteClueRemarkById(String id);
}