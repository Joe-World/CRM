package org.burning.crm.workbench.mapper;

import org.burning.crm.workbench.domain.ClueRemark;
import org.burning.crm.workbench.domain.ContactsRemark;

import java.util.List;

public interface ContactsRemarkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_remark
     *
     * @mbggenerated Sat Jul 16 11:52:16 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_remark
     *
     * @mbggenerated Sat Jul 16 11:52:16 CST 2022
     */
    int insert(ContactsRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_remark
     *
     * @mbggenerated Sat Jul 16 11:52:16 CST 2022
     */
    int insertSelective(ContactsRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_remark
     *
     * @mbggenerated Sat Jul 16 11:52:16 CST 2022
     */
    ContactsRemark selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_remark
     *
     * @mbggenerated Sat Jul 16 11:52:16 CST 2022
     */
    int updateByPrimaryKeySelective(ContactsRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_remark
     *
     * @mbggenerated Sat Jul 16 11:52:16 CST 2022
     */
    int updateByPrimaryKey(ContactsRemark record);

    /**
     * 批量创建联系人备注
     * @param remark
     * @return
     */
    int insertContactsRemarkByList(List<ContactsRemark> remark);

    /**
     * 保存创建的备注
     * @param contactsRemark
     * @return
     */
    int insertContactsRemark(ContactsRemark contactsRemark);

    /**
     * 根据id删除删除备注
     * @param id
     * @return
     */
    int deleteContactsRemarkById(String id);

    /**
     * 修改联系人备注信息
     * @param contactsRemark
     * @return
     */
    int updateContactsRemark(ContactsRemark contactsRemark);

    /**
     * 根据联系人id查询其所有备注信息
     * @param id
     * @return
     */
    List<ContactsRemark> selectContactsRemarkForDetailByContactsId(String id);
}